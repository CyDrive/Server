// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.0--rc1
// source: consts/enums.proto

package consts

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_Text         MessageType = 0
	MessageType_Image        MessageType = 1
	MessageType_Audio        MessageType = 2
	MessageType_Video        MessageType = 3
	MessageType_File         MessageType = 4
	MessageType_Notification MessageType = 5
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "Text",
		1: "Image",
		2: "Audio",
		3: "Video",
		4: "File",
		5: "Notification",
	}
	MessageType_value = map[string]int32{
		"Text":         0,
		"Image":        1,
		"Audio":        2,
		"Video":        3,
		"File":         4,
		"Notification": 5,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_consts_enums_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_consts_enums_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_consts_enums_proto_rawDescGZIP(), []int{0}
}

type DataTaskType int32

const (
	DataTaskType_Download DataTaskType = 0
	DataTaskType_Upload   DataTaskType = 1
)

// Enum value maps for DataTaskType.
var (
	DataTaskType_name = map[int32]string{
		0: "Download",
		1: "Upload",
	}
	DataTaskType_value = map[string]int32{
		"Download": 0,
		"Upload":   1,
	}
)

func (x DataTaskType) Enum() *DataTaskType {
	p := new(DataTaskType)
	*p = x
	return p
}

func (x DataTaskType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataTaskType) Descriptor() protoreflect.EnumDescriptor {
	return file_consts_enums_proto_enumTypes[1].Descriptor()
}

func (DataTaskType) Type() protoreflect.EnumType {
	return &file_consts_enums_proto_enumTypes[1]
}

func (x DataTaskType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataTaskType.Descriptor instead.
func (DataTaskType) EnumDescriptor() ([]byte, []int) {
	return file_consts_enums_proto_rawDescGZIP(), []int{1}
}

type StatusCode int32

const (
	StatusCode_Ok                StatusCode = 0
	StatusCode_AuthError         StatusCode = 1
	StatusCode_NeedParameters    StatusCode = 2
	StatusCode_InvalidParameters StatusCode = 4
	StatusCode_FileTooLarge      StatusCode = 8
	StatusCode_IoError           StatusCode = 16
	StatusCode_InternalError     StatusCode = 32
	StatusCode_SessionError      StatusCode = 64
)

// Enum value maps for StatusCode.
var (
	StatusCode_name = map[int32]string{
		0:  "Ok",
		1:  "AuthError",
		2:  "NeedParameters",
		4:  "InvalidParameters",
		8:  "FileTooLarge",
		16: "IoError",
		32: "InternalError",
		64: "SessionError",
	}
	StatusCode_value = map[string]int32{
		"Ok":                0,
		"AuthError":         1,
		"NeedParameters":    2,
		"InvalidParameters": 4,
		"FileTooLarge":      8,
		"IoError":           16,
		"InternalError":     32,
		"SessionError":      64,
	}
)

func (x StatusCode) Enum() *StatusCode {
	p := new(StatusCode)
	*p = x
	return p
}

func (x StatusCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusCode) Descriptor() protoreflect.EnumDescriptor {
	return file_consts_enums_proto_enumTypes[2].Descriptor()
}

func (StatusCode) Type() protoreflect.EnumType {
	return &file_consts_enums_proto_enumTypes[2]
}

func (x StatusCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusCode.Descriptor instead.
func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return file_consts_enums_proto_rawDescGZIP(), []int{2}
}

type NodeState int32

const (
	NodeState_Running  NodeState = 0
	NodeState_Starting NodeState = 1
	NodeState_Offline  NodeState = 2
	NodeState_Dropping NodeState = 3
)

// Enum value maps for NodeState.
var (
	NodeState_name = map[int32]string{
		0: "Running",
		1: "Starting",
		2: "Offline",
		3: "Dropping",
	}
	NodeState_value = map[string]int32{
		"Running":  0,
		"Starting": 1,
		"Offline":  2,
		"Dropping": 3,
	}
)

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_consts_enums_proto_enumTypes[3].Descriptor()
}

func (NodeState) Type() protoreflect.EnumType {
	return &file_consts_enums_proto_enumTypes[3]
}

func (x NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeState.Descriptor instead.
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return file_consts_enums_proto_rawDescGZIP(), []int{3}
}

var File_consts_enums_proto protoreflect.FileDescriptor

var file_consts_enums_proto_rawDesc = []byte{
	0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x73, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x73, 0x2a, 0x54, 0x0a, 0x0b,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x04,
	0x12, 0x10, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x05, 0x2a, 0x28, 0x0a, 0x0c, 0x44, 0x61, 0x74, 0x61, 0x54, 0x61, 0x73, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x00,
	0x12, 0x0a, 0x0a, 0x06, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x10, 0x01, 0x2a, 0x92, 0x01, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x6b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x75, 0x74, 0x68, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x65, 0x65, 0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65,
	0x74, 0x65, 0x72, 0x73, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x10, 0x04, 0x12, 0x10, 0x0a,
	0x0c, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x10, 0x08, 0x12,
	0x0b, 0x0a, 0x07, 0x49, 0x6f, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x10, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x20, 0x12,
	0x10, 0x0a, 0x0c, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10,
	0x40, 0x2a, 0x41, 0x0a, 0x09, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b,
	0x0a, 0x07, 0x52, 0x75, 0x6e, 0x6e, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x72, 0x6f, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x10, 0x03, 0x42, 0x25, 0x5a, 0x19, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x43, 0x79, 0x44, 0x72, 0x69, 0x76, 0x65, 0x2f, 0x63, 0x6f, 0x6e, 0x73, 0x74,
	0x73, 0xaa, 0x02, 0x07, 0x43, 0x79, 0x44, 0x72, 0x69, 0x76, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_consts_enums_proto_rawDescOnce sync.Once
	file_consts_enums_proto_rawDescData = file_consts_enums_proto_rawDesc
)

func file_consts_enums_proto_rawDescGZIP() []byte {
	file_consts_enums_proto_rawDescOnce.Do(func() {
		file_consts_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_consts_enums_proto_rawDescData)
	})
	return file_consts_enums_proto_rawDescData
}

var file_consts_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_consts_enums_proto_goTypes = []interface{}{
	(MessageType)(0),  // 0: consts.MessageType
	(DataTaskType)(0), // 1: consts.DataTaskType
	(StatusCode)(0),   // 2: consts.StatusCode
	(NodeState)(0),    // 3: consts.NodeState
}
var file_consts_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_consts_enums_proto_init() }
func file_consts_enums_proto_init() {
	if File_consts_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_consts_enums_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_consts_enums_proto_goTypes,
		DependencyIndexes: file_consts_enums_proto_depIdxs,
		EnumInfos:         file_consts_enums_proto_enumTypes,
	}.Build()
	File_consts_enums_proto = out.File
	file_consts_enums_proto_rawDesc = nil
	file_consts_enums_proto_goTypes = nil
	file_consts_enums_proto_depIdxs = nil
}
